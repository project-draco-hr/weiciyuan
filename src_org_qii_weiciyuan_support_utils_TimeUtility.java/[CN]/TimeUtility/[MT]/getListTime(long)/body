{
  long now=System.currentTimeMillis();
  long msg=time;
  Calendar nowCalendar=Calendar.getInstance();
  if (msgCalendar == null) {
    msgCalendar=Calendar.getInstance();
  }
  msgCalendar.setTimeInMillis(time);
  long calcMills=now - msg;
  long calSeconds=calcMills / 1000;
  if (calSeconds < 60) {
    return JUST_NOW;
  }
  long calMins=calSeconds / 60;
  if (calMins < 60) {
    return new StringBuilder().append(calMins).append(MIN).toString();
  }
  long calHours=calMins / 60;
  if (calHours < 24 && isSameDay(nowCalendar,msgCalendar)) {
    if (dayFormat == null) {
      dayFormat=new java.text.SimpleDateFormat("HH:mm");
    }
    String result=dayFormat.format(msgCalendar.getTime());
    return new StringBuilder().append(TODAY).append(" ").append(result).toString();
  }
  long calDay=calHours / 24;
  if (calDay < 31) {
    if (isYesterDay(nowCalendar,msgCalendar)) {
      if (dayFormat == null) {
        dayFormat=new java.text.SimpleDateFormat("HH:mm");
      }
      String result=dayFormat.format(msgCalendar.getTime());
      return new StringBuilder(YESTER_DAY).append(" ").append(result).toString();
    }
 else     if (isTheDayBeforeYesterDay(nowCalendar,msgCalendar)) {
      if (dayFormat == null) {
        dayFormat=new java.text.SimpleDateFormat("HH:mm");
      }
      String result=dayFormat.format(msgCalendar.getTime());
      return new StringBuilder(THE_DAY_BEFORE_YESTER_DAY).append(" ").append(result).toString();
    }
 else {
      if (dateFormat == null) {
        dateFormat=new java.text.SimpleDateFormat(DATE_FORMAT);
      }
      String result=dateFormat.format(msgCalendar.getTime());
      return new StringBuilder(result).toString();
    }
  }
  long calMonth=calDay / 31;
  if (calMonth < 12 && isSameYear(nowCalendar,msgCalendar)) {
    if (dateFormat == null) {
      dateFormat=new java.text.SimpleDateFormat(DATE_FORMAT);
    }
    String result=dateFormat.format(msgCalendar.getTime());
    return new StringBuilder().append(result).toString();
  }
  if (yearFormat == null) {
    yearFormat=new java.text.SimpleDateFormat(YEAR_FORMAT);
  }
  String result=yearFormat.format(msgCalendar.getTime());
  return new StringBuilder().append(result).toString();
}
