{
  Drawable drawable=getDrawable();
  if (drawable == null || (clipVerticalPercent == 0 && clipHorizontalPercent == 0 && clipTopPercent == 0 && clipBottomPercent == 0 && clipLeftPercent == 0 && clipRightPercent == 0)) {
    super.draw(canvas);
    return;
  }
  if (!(drawable instanceof BitmapDrawable)) {
    super.draw(canvas);
    return;
  }
  Bitmap bitmap=((BitmapDrawable)drawable).getBitmap();
  if (bitmap == null) {
    super.draw(canvas);
    return;
  }
  Rect clipRect=new Rect(rect);
  int width=clipRect.width();
  int height=clipRect.height();
  int bitmapWidth=bitmap.getWidth();
  int bitmapHeight=bitmap.getHeight();
  int imageViewWidth=width;
  int imageViewHeight=height;
  float startScale;
  int deltaX;
  int deltaY;
  if ((float)imageViewWidth / bitmapWidth > (float)imageViewHeight / bitmapHeight) {
    startScale=(float)imageViewHeight / bitmapHeight;
  }
 else {
    startScale=(float)imageViewWidth / bitmapWidth;
  }
  bitmapHeight=(int)(bitmapHeight * startScale);
  bitmapWidth=(int)(bitmapWidth * startScale);
  deltaX=(imageViewWidth - bitmapWidth) / 2;
  deltaY=(imageViewHeight - bitmapHeight) / 2;
  canvas.save();
  int clipV=(int)(this.clipVerticalPercent * bitmapHeight) + deltaY;
  int clipH=(int)(this.clipHorizontalPercent * bitmapWidth) + deltaX;
  int clipTop=(int)(this.clipTopPercent * bitmapHeight);
  int clipBottom=(int)(this.clipBottomPercent * bitmapHeight);
  int clipLeft=(int)(this.clipLeftPercent * bitmapWidth);
  int clipRight=(int)(this.clipRightPercent * bitmapWidth);
  clipRect.set(clipRect.left + clipH + clipLeft,clipRect.top + clipV + clipTop,clipRect.right - clipH - clipRight,clipRect.bottom - clipV - clipBottom);
  canvas.clipRect(clipRect);
  super.draw(canvas);
  canvas.restore();
}
