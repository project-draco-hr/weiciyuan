{
  Notification.Builder builder=new Notification.Builder(context).setTicker(ticker).setContentText(accountBean.getUsernick()).setSmallIcon(R.drawable.notification).setAutoCancel(true).setContentIntent(pendingIntent);
  if (allowVibrate()) {
    long[] pattern={0,200,500};
    builder.setVibrate(pattern);
  }
  if (allowLed()) {
    builder.setLights(Color.WHITE,300,1000);
  }
  configRingTone(builder);
  int mentionCmt=unreadBean.getMention_cmt();
  int mentionStatus=unreadBean.getMention_status();
  int mention=mentionStatus + mentionCmt;
  int cmt=unreadBean.getCmt();
  StringBuilder stringBuilder=new StringBuilder();
  if (mention > 0) {
    String txt=String.format(context.getString(R.string.new_mentions),String.valueOf(mention));
    stringBuilder.append(txt);
  }
  if (cmt > 0) {
    if (mention > 0)     stringBuilder.append("???");
    String txt=String.format(context.getString(R.string.new_comments),String.valueOf(cmt));
    stringBuilder.append(txt);
  }
  builder.setContentTitle(stringBuilder.toString());
  if (sum > 1) {
    builder.setNumber(sum);
  }
  Notification.InboxStyle inboxStyle=new Notification.InboxStyle(builder);
  inboxStyle.setBigContentTitle(stringBuilder.toString());
  if (comment != null) {
    for (    CommentBean c : comment.getItemList()) {
      inboxStyle.addLine(c.getUser().getScreen_name() + ":" + c.getText());
    }
  }
  if (repost != null) {
    for (    MessageBean m : repost.getItemList()) {
      inboxStyle.addLine(m.getUser().getScreen_name() + ":" + m.getText());
    }
  }
  if (mentionCommentsResult != null) {
    for (    CommentBean m : mentionCommentsResult.getItemList()) {
      inboxStyle.addLine(m.getUser().getScreen_name() + ":" + m.getText());
    }
  }
  builder.setStyle(inboxStyle);
  return builder.build();
}
