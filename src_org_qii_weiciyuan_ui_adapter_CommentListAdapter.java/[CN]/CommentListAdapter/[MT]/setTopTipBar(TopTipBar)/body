{
  this.topTipBar=bar;
  AutoScrollListView autoScrollListView=(AutoScrollListView)listView;
  onScrollListener=((AutoScrollListView)listView).getOnScrollListener();
  autoScrollListView.setOnScrollListener(new AbsListView.OnScrollListener(){
    @Override public void onScrollStateChanged(    AbsListView view,    int scrollState){
      onScrollListener.onScrollStateChanged(view,scrollState);
    }
    @Override public void onScroll(    AbsListView view,    int firstVisibleItem,    int visibleItemCount,    int totalItemCount){
      onScrollListener.onScroll(view,firstVisibleItem,visibleItemCount,totalItemCount);
      if (topTipBar.getValues().size() == 0) {
        return;
      }
      View childView=Utility.getListViewItemViewFromPosition(listView,firstVisibleItem);
      if (childView == null) {
        return;
      }
      int position=firstVisibleItem - ((ListView)view).getHeaderViewsCount();
      if (childView.getTop() == 0 && position <= 0) {
        topTipBar.clearAndReset();
      }
 else {
        handle(position + 1);
      }
    }
    private void handle(    int position){
      if (topTipBar != null && position < bean.size()) {
        CommentBean next=bean.get(position);
        if (next != null) {
          topTipBar.handle(next.getId());
        }
      }
    }
  }
);
}
