{
  holder.listview_root.setBackgroundColor(defaultBG);
  if (listView.getCheckedItemPosition() == position + 1)   holder.listview_root.setBackgroundColor(checkedBG);
  final CommentBean comment=getList().get(position);
  UserBean user=comment.getUser();
  if (user != null) {
    holder.username.setVisibility(View.VISIBLE);
    if (!TextUtils.isEmpty(user.getRemark())) {
      holder.username.setText(new StringBuilder(user.getScreen_name()).append("(").append(user.getRemark()).append(")").toString());
    }
 else {
      holder.username.setText(user.getScreen_name());
    }
    if (!showOriStatus && !SettingUtility.getEnableCommentRepostListAvatar()) {
      holder.avatar.setLayoutParams(new RelativeLayout.LayoutParams(0,0));
    }
 else {
      buildAvatar(holder.avatar,position,user);
    }
  }
 else {
    holder.username.setVisibility(View.INVISIBLE);
    holder.avatar.setVisibility(View.INVISIBLE);
  }
  holder.content.setText(comment.getListViewSpannableString());
  holder.time.setTime(comment.getMills());
  holder.repost_content.setVisibility(View.GONE);
  holder.repost_content_pic.setVisibility(View.GONE);
  CommentBean reply=comment.getReply_comment();
  if (holder.replyIV != null)   holder.replyIV.setVisibility(View.GONE);
  if (reply != null && showOriStatus) {
    holder.repost_layout.setVisibility(View.VISIBLE);
    holder.repost_flag.setVisibility(View.VISIBLE);
    holder.repost_content.setVisibility(View.VISIBLE);
    holder.repost_content.setText(reply.getListViewReplySpannableString());
  }
 else {
    MessageBean repost_msg=comment.getStatus();
    if (repost_msg != null && showOriStatus) {
      buildRepostContent(repost_msg,holder,position);
    }
 else {
      holder.repost_layout.setVisibility(View.GONE);
      holder.repost_flag.setVisibility(View.GONE);
      if (holder.replyIV != null) {
        holder.replyIV.setVisibility(View.VISIBLE);
        holder.replyIV.setOnClickListener(new View.OnClickListener(){
          @Override public void onClick(          View v){
            Intent intent=new Intent(getActivity(),WriteReplyToCommentActivity.class);
            intent.putExtra("token",GlobalContext.getInstance().getSpecialToken());
            intent.putExtra("msg",comment);
            getActivity().startActivity(intent);
          }
        }
);
        holder.content.setMovementMethod(LinkMovementMethod.getInstance());
        final BackgroundColorSpan backgroundColorSpan=new BackgroundColorSpan(Color.parseColor("#33B5E5"));
        holder.content.setOnTouchListener(new View.OnTouchListener(){
          @Override public boolean onTouch(          View v,          MotionEvent event){
            final Spannable sps=(Spannable)holder.content.getText();
            int start=holder.content.getSelectionStart();
            int end=holder.content.getSelectionEnd();
            boolean isLink=start != -1 && end != -1;
            if (isLink) {
              sps.setSpan(backgroundColorSpan,start,end,Spanned.SPAN_INCLUSIVE_INCLUSIVE);
            }
switch (event.getActionMasked()) {
case MotionEvent.ACTION_CANCEL:
case MotionEvent.ACTION_UP:
              new Handler().postDelayed(new Runnable(){
                @Override public void run(){
                  sps.removeSpan(backgroundColorSpan);
                }
              }
,100L);
            break;
        }
        return false;
      }
    }
);
  }
}
}
}
