{
  Drawable drawable=bg.get(holder);
  if (drawable != null) {
    holder.listview_root.setBackgroundDrawable(drawable);
  }
 else {
    drawable=holder.listview_root.getBackground();
    bg.put(holder,drawable);
  }
  if (listView.getCheckedItemPosition() == position + 1)   holder.listview_root.setBackgroundColor(checkedBG);
  final CommentBean comment=getList().get(position);
  if (this.topTipBar != null && (position + 1) < bean.size()) {
    CommentBean next=bean.get(position + 1);
    if (next != null) {
      this.topTipBar.handle(next.getId());
    }
    if (position == 0) {
      handler.postDelayed(new Runnable(){
        @Override public void run(){
          topTipBar.clearAndReset();
        }
      }
,300);
    }
  }
  UserBean user=comment.getUser();
  if (user != null) {
    holder.username.setVisibility(View.VISIBLE);
    if (!TextUtils.isEmpty(user.getRemark())) {
      holder.username.setText(new StringBuilder(user.getScreen_name()).append("(").append(user.getRemark()).append(")").toString());
    }
 else {
      holder.username.setText(user.getScreen_name());
    }
    if (!showOriStatus && !SettingUtility.getEnableCommentRepostListAvatar()) {
      holder.avatar.setLayoutParams(new RelativeLayout.LayoutParams(0,0));
    }
 else {
      buildAvatar(holder.avatar,position,user);
    }
  }
 else {
    holder.username.setVisibility(View.INVISIBLE);
    holder.avatar.setVisibility(View.INVISIBLE);
  }
  holder.content.setText(comment.getListViewSpannableString());
  holder.time.setTime(comment.getMills());
  if (holder.source != null)   holder.source.setText(Html.fromHtml(comment.getSource()).toString());
  holder.repost_content.setVisibility(View.GONE);
  holder.repost_content_pic.setVisibility(View.GONE);
  CommentBean reply=comment.getReply_comment();
  if (holder.replyIV != null)   holder.replyIV.setVisibility(View.GONE);
  if (reply != null && showOriStatus) {
    if (holder.repost_layout != null)     holder.repost_layout.setVisibility(View.VISIBLE);
    holder.repost_flag.setVisibility(View.VISIBLE);
    holder.repost_content.setVisibility(View.VISIBLE);
    holder.repost_content.setText(reply.getListViewSpannableString());
  }
 else {
    MessageBean repost_msg=comment.getStatus();
    if (repost_msg != null && showOriStatus) {
      buildRepostContent(repost_msg,holder,position);
    }
 else {
      if (holder.repost_layout != null)       holder.repost_layout.setVisibility(View.GONE);
      holder.repost_flag.setVisibility(View.GONE);
      if (holder.replyIV != null) {
        holder.replyIV.setVisibility(View.VISIBLE);
        holder.replyIV.setOnClickListener(new View.OnClickListener(){
          @Override public void onClick(          View v){
            Intent intent=new Intent(getActivity(),WriteReplyToCommentActivity.class);
            intent.putExtra("token",GlobalContext.getInstance().getSpecialToken());
            intent.putExtra("msg",comment);
            getActivity().startActivity(intent);
          }
        }
);
      }
    }
  }
}
