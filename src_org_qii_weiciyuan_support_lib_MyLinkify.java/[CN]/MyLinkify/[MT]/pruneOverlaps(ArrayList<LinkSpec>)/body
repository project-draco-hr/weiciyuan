{
  Comparator<LinkSpec> c=new Comparator<LinkSpec>(){
    public final int compare(    LinkSpec a,    LinkSpec b){
      if (a.start < b.start) {
        return -1;
      }
      if (a.start > b.start) {
        return 1;
      }
      if (a.end < b.end) {
        return 1;
      }
      if (a.end > b.end) {
        return -1;
      }
      return 0;
    }
    public final boolean equals(    Object o){
      return false;
    }
  }
;
  Collections.sort(links,c);
  int len=links.size();
  int i=0;
  while (i < len - 1) {
    LinkSpec a=links.get(i);
    LinkSpec b=links.get(i + 1);
    int remove=-1;
    if ((a.start <= b.start) && (a.end > b.start)) {
      if (b.end <= a.end) {
        remove=i + 1;
      }
 else       if ((a.end - a.start) > (b.end - b.start)) {
        remove=i + 1;
      }
 else       if ((a.end - a.start) < (b.end - b.start)) {
        remove=i;
      }
      if (remove != -1) {
        links.remove(remove);
        len--;
        continue;
      }
    }
    i++;
  }
}
