{
  if (TextUtils.isEmpty(url)) {
    return;
  }
  final Bitmap bitmap=getBitmapFromMemCache(url);
  if (bitmap != null && bitmap.getHeight() == height && bitmap.getWidth() == width) {
    for (int i=0; i < imageView.size(); i++) {
      ImageView imageView1=imageView.get(i);
      imageView1.setImageDrawable(new BitmapDrawable(GlobalContext.getInstance().getResources(),bitmap));
      if (animations != null && animations.size() > i) {
        Animation animation=animations.get(i);
        imageView1.startAnimation(animation);
      }
    }
    return;
  }
  new MyAsyncTask<Void,Bitmap,Bitmap>(){
    @Override protected Bitmap doInBackground(    Void... params){
      Bitmap bitmap=null;
      String path=FileManager.getFilePathFromUrl(url,method);
      if (!(ImageUtility.isThisBitmapCanRead(path) && TaskCache.isThisUrlTaskFinished(url))) {
        boolean downloaded=TaskCache.waitForPictureDownload(url,null,FileManager.generateDownloadFileName(url),method);
        if (downloaded) {
          path=FileManager.getFilePathFromUrl(url,method);
        }
      }
      if (!TextUtils.isEmpty(path)) {
        bitmap=ImageUtility.readNormalPic(path,width,height);
      }
      return bitmap;
    }
    @Override protected void onPostExecute(    Bitmap bitmap){
      super.onPostExecute(bitmap);
      if (bitmap != null) {
        GlobalContext.getInstance().getBitmapCache().put(url,bitmap);
        for (int i=0; i < imageView.size(); i++) {
          ImageView imageView1=imageView.get(i);
          imageView1.setImageDrawable(new BitmapDrawable(GlobalContext.getInstance().getResources(),bitmap));
          if (animations != null && animations.size() > i) {
            Animation animation=animations.get(i);
            imageView1.startAnimation(animation);
          }
        }
      }
    }
  }
.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
}
