{
  view.getImageView().clearAnimation();
  if (!shouldReloadPicture(view.getImageView(),urlKey)) {
    return;
  }
  final Bitmap bitmap=getBitmapFromMemCache(urlKey);
  if (bitmap != null) {
    view.setImageBitmap(bitmap);
    view.getImageView().setTag(urlKey);
    if (view.getProgressBar() != null) {
      view.getProgressBar().setVisibility(View.INVISIBLE);
    }
    if (view.getImageView().getAlpha() != 1.0f) {
      view.getImageView().setAlpha(1.0f);
    }
    view.setGifFlag(ImageUtility.isThisPictureGif(urlKey));
    cancelPotentialDownload(urlKey,view.getImageView());
  }
 else {
    if (isFling) {
      view.getImageView().setImageResource(defaultPictureResId);
      if (view.getProgressBar() != null) {
        view.getProgressBar().setVisibility(View.INVISIBLE);
      }
      view.setGifFlag(ImageUtility.isThisPictureGif(urlKey));
      return;
    }
    if (!cancelPotentialDownload(urlKey,view.getImageView())) {
      return;
    }
    final LocalOrNetworkChooseWorker newTask=new LocalOrNetworkChooseWorker(view,urlKey,method,isMultiPictures);
    PictureBitmapDrawable downloadedDrawable=new PictureBitmapDrawable(newTask);
    view.setImageDrawable(downloadedDrawable);
    handler.postDelayed(new Runnable(){
      @Override public void run(){
        if (getBitmapDownloaderTask(view.getImageView()) == newTask) {
          newTask.executeOnNormal();
        }
        return;
      }
    }
,400);
  }
}
