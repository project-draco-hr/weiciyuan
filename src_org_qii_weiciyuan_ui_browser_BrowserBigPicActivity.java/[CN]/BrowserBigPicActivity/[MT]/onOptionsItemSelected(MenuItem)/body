{
switch (item.getItemId()) {
case android.R.id.home:
    Intent intent=new Intent(this,MainTimeLineActivity.class);
  intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
startActivity(intent);
return true;
case R.id.menu_switch:
if (task != null) {
task.cancel(true);
}
task=new PicSimpleBitmapWorkerTask(oriUrl);
task.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
path="";
oriMenu.setVisible(false);
getActionBar().setSubtitle(null);
break;
case R.id.menu_save:
if (task != null && task.getStatus() == MyAsyncTask.Status.FINISHED) {
if (saveTask == null) {
saveTask=new PicSaveTask();
saveTask.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
}
 else if (saveTask.getStatus() == MyAsyncTask.Status.FINISHED) {
Toast.makeText(BrowserBigPicActivity.this,getString(R.string.already_saved),Toast.LENGTH_SHORT).show();
}
}
break;
case R.id.menu_share:
Intent sharingIntent=new Intent(Intent.ACTION_SEND);
sharingIntent.setType("image/jpeg");
if (!TextUtils.isEmpty(path)) {
Uri uri=Uri.fromFile(new File(path));
sharingIntent.putExtra(Intent.EXTRA_STREAM,uri);
PackageManager packageManager=getPackageManager();
List<ResolveInfo> activities=packageManager.queryIntentActivities(sharingIntent,0);
boolean isIntentSafe=activities.size() > 0;
if (isIntentSafe && mShareActionProvider != null) {
mShareActionProvider.setShareIntent(sharingIntent);
}
}
break;
case R.id.menu_download:
if (task != null) {
task.cancel(true);
}
if (!TextUtils.isEmpty(path)) {
new File(path).delete();
}
if (oriMenu.isVisible()) {
task=new PicSimpleBitmapWorkerTask(url);
}
 else {
task=new PicSimpleBitmapWorkerTask(oriUrl);
}
task.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
break;
}
return super.onOptionsItemSelected(item);
}
