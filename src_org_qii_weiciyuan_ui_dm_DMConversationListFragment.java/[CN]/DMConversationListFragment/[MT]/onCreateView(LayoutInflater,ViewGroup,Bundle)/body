{
  View view=inflater.inflate(R.layout.dmconversationlistfragment_layout,container,false);
  empty=(TextView)view.findViewById(R.id.empty);
  progressBar=(ProgressBar)view.findViewById(R.id.progressbar);
  pullToRefreshListView=(PullToRefreshListView)view.findViewById(R.id.listView);
  pullToRefreshListView.setOnRefreshListener(new PullToRefreshBase.OnRefreshListener<ListView>(){
    @Override public void onRefresh(    PullToRefreshBase<ListView> refreshView){
      refresh();
    }
  }
);
  pullToRefreshListView.setOnLastItemVisibleListener(new PullToRefreshBase.OnLastItemVisibleListener(){
    @Override public void onLastItemVisible(){
      listViewFooterViewClick(null);
    }
  }
);
  getListView().setScrollingCacheEnabled(false);
  getListView().setHeaderDividersEnabled(false);
  footerView=inflater.inflate(R.layout.listview_footer_layout,null);
  getListView().addFooterView(footerView);
  dismissFooterView();
  getListView().setOnItemClickListener(new AdapterView.OnItemClickListener(){
    @Override public void onItemClick(    AdapterView<?> parent,    View view,    int position,    long id){
      if (mActionMode != null) {
        getListView().clearChoices();
        mActionMode.finish();
        mActionMode=null;
        return;
      }
      getListView().clearChoices();
      if (position - 1 < getList().getItemList().size() && position - 1 >= 0) {
        listViewItemClick(parent,view,position - 1,id);
      }
 else       if (position - 1 >= getList().getItemList().size()) {
        listViewFooterViewClick(view);
      }
    }
  }
);
  et=(EditText)view.findViewById(R.id.content);
  view.findViewById(R.id.send).setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      send();
    }
  }
);
  ImageButton emoticon=(ImageButton)view.findViewById(R.id.emoticon);
  emoticon.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
    }
  }
);
  buildListAdapter();
  return view;
}
