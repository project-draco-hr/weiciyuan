{
  TimeLinePosition position=getPosition(accountId);
  int limit=position.position + AppConfig.DB_CACHE_COUNT_OFFSET > AppConfig.DEFAULT_MSG_COUNT_50 ? position.position + AppConfig.DB_CACHE_COUNT_OFFSET : AppConfig.DEFAULT_MSG_COUNT_50;
  CommentListBean result=new CommentListBean();
  List<CommentBean> msgList=new ArrayList<CommentBean>();
  String sql="select * from " + MentionCommentsTable.MentionCommentsDataTable.TABLE_NAME + " where "+ MentionCommentsTable.MentionCommentsDataTable.ACCOUNTID+ "  = "+ accountId+ " order by "+ MentionCommentsTable.MentionCommentsDataTable.MBLOGID+ " desc limit "+ limit;
  Cursor c=getRsd().rawQuery(sql,null);
  Gson gson=new Gson();
  while (c.moveToNext()) {
    String json=c.getString(c.getColumnIndex(MentionCommentsTable.MentionCommentsDataTable.JSONDATA));
    if (!TextUtils.isEmpty(json)) {
      try {
        CommentBean value=gson.fromJson(json,CommentBean.class);
        if (!value.isMiddleUnreadItem()) {
          value.getListViewSpannableString();
        }
        msgList.add(value);
      }
 catch (      JsonSyntaxException e) {
        AppLogger.e(e.getMessage());
      }
    }
 else {
      msgList.add(null);
    }
  }
  result.setComments(msgList);
  c.close();
  CommentTimeLineData mentionTimeLineData=new CommentTimeLineData(result,position);
  return mentionTimeLineData;
}
