{
  super.onViewCreated(view,savedInstanceState);
  getPullToRefreshListView().setMode(PullToRefreshBase.Mode.DISABLED);
  getPullToRefreshListView().setOnLastItemVisibleListener(null);
  getPullToRefreshListView().getRefreshableView().setOverScrollMode(View.OVER_SCROLL_ALWAYS);
  viewPager.setOnTouchListener(new View.OnTouchListener(){
    float rawX;
    @Override public boolean onTouch(    View v,    MotionEvent event){
switch (event.getActionMasked()) {
case MotionEvent.ACTION_DOWN:
        rawX=event.getRawX();
      return false;
case MotionEvent.ACTION_CANCEL:
case MotionEvent.ACTION_UP:
    viewPager.getParent().requestDisallowInterceptTouchEvent(false);
  rawX=0f;
return false;
case MotionEvent.ACTION_MOVE:
if (Math.abs(rawX - event.getRawX()) > ViewConfiguration.get(getActivity()).getScaledTouchSlop()) {
viewPager.getParent().requestDisallowInterceptTouchEvent(true);
}
break;
}
return false;
}
}
);
viewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener(){
@Override public void onPageSelected(int position){
super.onPageSelected(position);
switch (position) {
case 0:
leftPoint.getDrawable().setLevel(1);
centerPoint.getDrawable().setLevel(0);
rightPoint.getDrawable().setLevel(0);
break;
case 1:
leftPoint.getDrawable().setLevel(0);
centerPoint.getDrawable().setLevel(1);
rightPoint.getDrawable().setLevel(0);
break;
case 2:
leftPoint.getDrawable().setLevel(0);
centerPoint.getDrawable().setLevel(0);
rightPoint.getDrawable().setLevel(1);
break;
}
}
}
);
}
