{
  HeaderPagerAdapter adapter=new HeaderPagerAdapter();
  viewPager.setAdapter(adapter);
  friendsCount.setText(Utility.convertStateNumberToString(getActivity(),userBean.getFriends_count()));
  fansCount.setText(Utility.convertStateNumberToString(getActivity(),userBean.getFollowers_count()));
  weiboCount.setText(Utility.convertStateNumberToString(getActivity(),userBean.getStatuses_count()));
  TextPaint tp=nickname.getPaint();
  tp.setFakeBoldText(true);
  if (TextUtils.isEmpty(userBean.getRemark()))   nickname.setText(userBean.getScreen_name());
 else   nickname.setText(userBean.getScreen_name() + "(" + userBean.getRemark()+ ")");
  if (userBean.isVerified()) {
    avatar.isVerified();
  }
 else {
    avatar.reset();
  }
  if (!userBean.isVerified()) {
    rightPoint.setVisibility(View.GONE);
  }
 else {
    rightPoint.setVisibility(View.VISIBLE);
  }
  TimeLineBitmapDownloader.getInstance().downloadAvatar(avatar.getImageView(),userBean,(AbstractTimeLineFragment)this);
  avatar.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      String path=FileManager.getFilePathFromUrl(userBean.getAvatar_large(),FileLocationMethod.avatar_large);
      if (!new File(path).exists()) {
        path=FileManager.getFilePathFromUrl(userBean.getProfile_image_url(),FileLocationMethod.avatar_small);
        if (!new File(path).exists()) {
          return;
        }
      }
      UserAvatarDialog dialog=new UserAvatarDialog(path);
      dialog.show(getFragmentManager(),"");
    }
  }
);
  if (!TextUtils.isEmpty(userBean.getDescription())) {
    bio.setText(userBean.getDescription());
    bio.setVisibility(View.VISIBLE);
  }
 else {
    bio.setVisibility(View.GONE);
  }
  if (!TextUtils.isEmpty(userBean.getLocation())) {
    location.setText(userBean.getLocation());
    location.setVisibility(View.VISIBLE);
  }
 else {
    location.setVisibility(View.GONE);
  }
  if (!TextUtils.isEmpty(userBean.getUrl())) {
    url.setText(userBean.getUrl());
    ListViewTool.addLinks(url);
    url.setVisibility(View.VISIBLE);
  }
 else {
    url.setVisibility(View.GONE);
  }
  if (userBean.isVerified()) {
    verifiedReason.setVisibility(View.VISIBLE);
    verifiedReason.setText(userBean.getVerified_reason());
  }
 else {
    verifiedReason.setVisibility(View.GONE);
  }
  if (userBean.isFollow_me()) {
    followsYou.setVisibility(View.VISIBLE);
    followsYou.setText(getString(R.string.is_following_me) + "@" + GlobalContext.getInstance().getCurrentAccountName());
  }
 else {
    followsYou.setVisibility(View.GONE);
  }
  cover.post(new Runnable(){
    @Override public void run(){
      displayCoverPicture();
    }
  }
);
}
