{
  Intent intent;
  MessageBean msg;
  long[] ids=listView.getCheckedItemIds();
switch (item.getItemId()) {
case R.id.menu_repost:
    msg=(MessageBean)adapter.getItem(listView.getCheckedItemPositions().keyAt(listView.getCheckedItemCount() - 1) - 1);
  intent=new Intent(getActivity(),WriteRepostActivity.class);
intent.putExtra("token",GlobalContext.getInstance().getSpecialToken());
intent.putExtra("id",String.valueOf(ids[0]));
intent.putExtra("msg",msg);
getActivity().startActivity(intent);
listView.clearChoices();
mode.finish();
break;
case R.id.menu_comment:
msg=(MessageBean)adapter.getItem(listView.getCheckedItemPositions().keyAt(listView.getCheckedItemCount() - 1) - 1);
intent=new Intent(getActivity(),WriteCommentActivity.class);
intent.putExtra("token",GlobalContext.getInstance().getSpecialToken());
intent.putExtra("id",String.valueOf(ids[0]));
intent.putExtra("msg",msg);
getActivity().startActivity(intent);
listView.clearChoices();
mode.finish();
break;
case R.id.menu_fav:
if (favTask == null || favTask.getStatus() == MyAsyncTask.Status.FINISHED) {
favTask=new FavAsyncTask(GlobalContext.getInstance().getSpecialToken(),bean.getId());
favTask.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
}
listView.clearChoices();
listView.clearChoices();
mode.finish();
break;
case R.id.menu_remove:
int position=listView.getCheckedItemPosition() - 1;
RemoveDialog dialog=new RemoveDialog(position);
dialog.setTargetFragment(fragment,0);
dialog.show(fragment.getFragmentManager(),"");
break;
case R.id.menu_share:
Intent sharingIntent=new Intent(Intent.ACTION_SEND);
sharingIntent.setType("text/plain");
sharingIntent.putExtra(Intent.EXTRA_TEXT,bean.getText());
PackageManager packageManager=getActivity().getPackageManager();
List<ResolveInfo> activities=packageManager.queryIntentActivities(sharingIntent,0);
boolean isIntentSafe=activities.size() > 0;
if (isIntentSafe && mShareActionProvider != null) {
mShareActionProvider.setShareIntent(sharingIntent);
}
mShareActionProvider.setOnShareTargetSelectedListener(new ShareActionProvider.OnShareTargetSelectedListener(){
@Override public boolean onShareTargetSelected(ShareActionProvider source,Intent intent){
finish();
return false;
}
}
);
break;
case R.id.menu_copy:
ClipboardManager cm=(ClipboardManager)fragment.getActivity().getSystemService(Context.CLIPBOARD_SERVICE);
cm.setPrimaryClip(ClipData.newPlainText("sinaweibo",bean.getText()));
Toast.makeText(fragment.getActivity(),fragment.getString(R.string.copy_successfully),Toast.LENGTH_SHORT).show();
mode.finish();
break;
}
return true;
}
