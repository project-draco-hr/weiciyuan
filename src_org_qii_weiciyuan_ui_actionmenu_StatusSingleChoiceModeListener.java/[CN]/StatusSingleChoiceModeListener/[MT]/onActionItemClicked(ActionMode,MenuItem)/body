{
  Intent intent;
  long[] ids=listView.getCheckedItemIds();
switch (item.getItemId()) {
case R.id.menu_repost:
    MessageBean msg=(MessageBean)adapter.getItem(listView.getCheckedItemPositions().keyAt(listView.getCheckedItemCount() - 1) - 1);
  intent=new Intent(getActivity(),RepostNewActivity.class);
intent.putExtra("token",((IToken)getActivity()).getToken());
intent.putExtra("id",String.valueOf(ids[0]));
intent.putExtra("msg",msg);
getActivity().startActivity(intent);
listView.clearChoices();
mode.finish();
break;
case R.id.menu_comment:
intent=new Intent(getActivity(),CommentNewActivity.class);
intent.putExtra("token",((IToken)getActivity()).getToken());
intent.putExtra("id",String.valueOf(ids[0]));
getActivity().startActivity(intent);
listView.clearChoices();
mode.finish();
break;
case R.id.menu_fav:
Toast.makeText(getActivity(),"fav",Toast.LENGTH_SHORT).show();
listView.clearChoices();
listView.clearChoices();
mode.finish();
break;
case R.id.menu_remove:
String token=((IToken)getActivity()).getToken();
int position=listView.getCheckedItemPosition() - 1;
new RemoveTask(token,bean.getId(),position).executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
listView.clearChoices();
mode.finish();
break;
case R.id.menu_share:
Intent sharingIntent=new Intent(Intent.ACTION_SEND);
sharingIntent.setType("text/plain");
sharingIntent.putExtra(Intent.EXTRA_TEXT,bean.getText());
PackageManager packageManager=getActivity().getPackageManager();
List<ResolveInfo> activities=packageManager.queryIntentActivities(sharingIntent,0);
boolean isIntentSafe=activities.size() > 0;
if (isIntentSafe && mShareActionProvider != null) {
mShareActionProvider.setShareIntent(sharingIntent);
}
break;
}
return true;
}
