{
  final Activity activity=GlobalContext.getInstance().getCurrentRunningActivity();
  boolean currentAccountTokenIsExpired=true;
  AccountBean currentAccount=GlobalContext.getInstance().getAccountBean();
  if (currentAccount != null) {
    currentAccountTokenIsExpired=!Utility.isTokenValid(currentAccount);
  }
  if (currentAccountTokenIsExpired && activity != null && !GlobalContext.getInstance().tokenExpiredDialogIsShowing) {
    if (activity.getClass() == AccountActivity.class) {
      return;
    }
    if (activity.getClass() == OAuthActivity.class) {
      return;
    }
    if (activity.getClass() == BlackMagicActivity.class) {
      return;
    }
    if (activity.getClass() == SSOActivity.class) {
      return;
    }
    activity.runOnUiThread(new Runnable(){
      @Override public void run(){
        new AlertDialog.Builder(activity).setTitle(R.string.dialog_title_error).setMessage(R.string.your_token_is_expired).setPositiveButton(R.string.logout_to_login_again,new DialogInterface.OnClickListener(){
          @Override public void onClick(          DialogInterface dialog,          int which){
            Intent intent=new Intent(activity,AccountActivity.class);
            intent.putExtra("launcher",false);
            activity.startActivity(intent);
            activity.finish();
            GlobalContext.getInstance().tokenExpiredDialogIsShowing=false;
          }
        }
).setOnCancelListener(new DialogInterface.OnCancelListener(){
          @Override public void onCancel(          DialogInterface dialog){
          }
        }
).show();
        GlobalContext.getInstance().tokenExpiredDialogIsShowing=true;
      }
    }
);
  }
 else   if (!currentAccountTokenIsExpired || activity == null) {
    Intent i=new Intent(GlobalContext.getInstance(),AccountActivity.class);
    i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
    i.putExtra("launcher",false);
    PendingIntent pendingIntent=PendingIntent.getActivity(GlobalContext.getInstance(),0,i,PendingIntent.FLAG_UPDATE_CURRENT);
    Notification.Builder builder=new Notification.Builder(GlobalContext.getInstance()).setContentTitle(GlobalContext.getInstance().getString(R.string.login_again)).setContentText(GlobalContext.getInstance().getString(R.string.have_account_whose_token_is_expired)).setSmallIcon(R.drawable.ic_notification).setAutoCancel(true).setContentIntent(pendingIntent).setOnlyAlertOnce(true);
    NotificationManager notificationManager=(NotificationManager)GlobalContext.getInstance().getSystemService(Context.NOTIFICATION_SERVICE);
    notificationManager.notify(NotificationServiceHelper.getTokenExpiredNotificationId(),builder.build());
  }
 else   if (GlobalContext.getInstance().tokenExpiredDialogIsShowing) {
    NotificationManager notificationManager=(NotificationManager)GlobalContext.getInstance().getSystemService(Context.NOTIFICATION_SERVICE);
    notificationManager.cancel(NotificationServiceHelper.getTokenExpiredNotificationId());
  }
}
