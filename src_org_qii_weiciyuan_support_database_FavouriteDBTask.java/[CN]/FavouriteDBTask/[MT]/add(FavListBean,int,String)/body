{
  Gson gson=new Gson();
  List<FavBean> msgList=list.getFavorites();
  DatabaseUtils.InsertHelper ih=new DatabaseUtils.InsertHelper(getWsd(),FavouriteTable.FavouriteDataTable.TABLE_NAME);
  final int mblogidColumn=ih.getColumnIndex(FavouriteTable.FavouriteDataTable.MBLOGID);
  final int accountidColumn=ih.getColumnIndex(FavouriteTable.FavouriteDataTable.ACCOUNTID);
  final int jsondataColumn=ih.getColumnIndex(FavouriteTable.FavouriteDataTable.JSONDATA);
  try {
    getWsd().beginTransaction();
    for (    FavBean msg : msgList) {
      ih.prepareForInsert();
      ih.bind(mblogidColumn,msg.getStatus().getId());
      ih.bind(accountidColumn,accountId);
      String json=gson.toJson(msg);
      ih.bind(jsondataColumn,json);
      ih.execute();
    }
    getWsd().setTransactionSuccessful();
  }
 catch (  SQLException e) {
  }
 finally {
    getWsd().endTransaction();
    ih.close();
  }
  String sql="select * from " + FavouriteTable.TABLE_NAME + " where "+ FavouriteTable.ACCOUNTID+ "  = "+ accountId;
  Cursor c=getRsd().rawQuery(sql,null);
  if (c.moveToNext()) {
    try {
      String[] args={accountId};
      ContentValues cv=new ContentValues();
      cv.put(FavouriteTable.PAGE,page);
      getWsd().update(FavouriteTable.TABLE_NAME,cv,FavouriteTable.ACCOUNTID + "=?",args);
    }
 catch (    JsonSyntaxException e) {
    }
  }
 else {
    ContentValues cv=new ContentValues();
    cv.put(FavouriteTable.ACCOUNTID,accountId);
    cv.put(FavouriteTable.PAGE,page);
    getWsd().insert(FavouriteTable.TABLE_NAME,FavouriteTable.ID,cv);
  }
  reduceFavouriteTable(accountId);
}
