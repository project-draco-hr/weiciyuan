{
switch (getCurrentState(savedInstanceState)) {
case FIRST_TIME_START:
    if (Utility.isTaskStopped(dbTask) && getList().getSize() == 0) {
      dbTask=new DBCacheTask(this,accountBean.getUid());
      dbTask.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
      GroupInfoTask groupInfoTask=new GroupInfoTask(GlobalContext.getInstance().getSpecialToken(),GlobalContext.getInstance().getCurrentAccountId());
      groupInfoTask.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
    }
 else {
      getAdapter().notifyDataSetChanged();
      refreshLayout(getList());
    }
  groupDataCache.put(ALL_GROUP_ID,new MessageListBean());
groupDataCache.put(BILATERAL_GROUP_ID,new MessageListBean());
if (getList().getSize() > 0) {
groupDataCache.put(ALL_GROUP_ID,getList().copy());
}
buildActionBarNav();
break;
case SCREEN_ROTATE:
refreshLayout(getList());
buildActionBarNav();
setListViewPositionFromPositionsCache();
break;
case ACTIVITY_DESTROY_AND_CREATE:
userBean=savedInstanceState.getParcelable("userBean");
accountBean=savedInstanceState.getParcelable("account");
token=savedInstanceState.getString("token");
if (Utility.isTaskStopped(dbTask) && getList().getSize() == 0) {
dbTask=new DBCacheTask(this,accountBean.getUid());
dbTask.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
GroupInfoTask groupInfoTask=new GroupInfoTask(GlobalContext.getInstance().getSpecialToken(),GlobalContext.getInstance().getCurrentAccountId());
groupInfoTask.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
}
 else {
getAdapter().notifyDataSetChanged();
refreshLayout(getList());
}
groupDataCache.put(ALL_GROUP_ID,new MessageListBean());
groupDataCache.put(BILATERAL_GROUP_ID,new MessageListBean());
if (getList().getSize() > 0) {
groupDataCache.put(ALL_GROUP_ID,getList().copy());
}
buildActionBarNav();
break;
}
super.onActivityCreated(savedInstanceState);
}
