{
  String accountId=accountBean.getUid();
  String token=accountBean.getAccess_token();
  try {
    UnreadDao unreadDao=new UnreadDao(token,accountBean.getUid());
    unreadBean=unreadDao.getCount();
    int sum=unreadBean.getMention_cmt() + unreadBean.getMention_status() + unreadBean.getCmt();
    if (sum > 0) {
      CommentListBean commentLineBean=DatabaseManager.getInstance().getCommentLineMsgList(accountId);
      MessageListBean messageListBean=DatabaseManager.getInstance().getRepostLineMsgList(accountId);
      MainCommentsTimeLineDao commentDao=new MainCommentsTimeLineDao(token);
      if (commentLineBean.getSize() > 0) {
        commentDao.setSince_id(commentLineBean.getItemList().get(0).getId());
      }
      MainMentionsTimeLineDao mentionDao=new MainMentionsTimeLineDao(token);
      if (messageListBean.getSize() > 0) {
        mentionDao.setSince_id(messageListBean.getItemList().get(0).getId());
      }
      commentResult=commentDao.getGSONMsgListWithoutClearUnread();
      repostResult=mentionDao.getGSONMsgListWithoutClearUnread();
    }
  }
 catch (  WeiboException e) {
    this.e=e;
    cancel(true);
    return null;
  }
  if (unreadBean == null) {
    cancel(true);
  }
  return null;
}
