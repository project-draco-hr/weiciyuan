{
  String result="";
  try {
    HttpClient client=getNewHttpClient(context);
    HttpUriRequest request=null;
    ByteArrayOutputStream bos=null;
    if (method.equals("GET")) {
      url=url + "?" + encodeUrl(params);
      HttpGet get=new HttpGet(url);
      request=get;
    }
 else     if (method.equals("POST")) {
      HttpPost post=new HttpPost(url);
      byte[] data=null;
      bos=new ByteArrayOutputStream(1024 * 50);
      if (!TextUtils.isEmpty(file)) {
        Utility.paramToUpload(bos,params);
        post.setHeader("Content-Type",MULTIPART_FORM_DATA + "; boundary=" + BOUNDARY);
        Bitmap bf=BitmapFactory.decodeFile(file);
        Utility.imageContentToUpload(bos,bf);
      }
 else {
        post.setHeader("Content-Type","application/x-www-form-urlencoded");
        String postParam=encodeParameters(params);
        data=postParam.getBytes("UTF-8");
        bos.write(data);
      }
      data=bos.toByteArray();
      bos.close();
      ByteArrayEntity formEntity=new ByteArrayEntity(data);
      post.setEntity(formEntity);
      request=post;
    }
 else     if (method.equals("DELETE")) {
      request=new HttpDelete(url);
    }
    setHeader(method,request,params,url,token);
    HttpResponse response=client.execute(request);
    StatusLine status=response.getStatusLine();
    int statusCode=status.getStatusCode();
    if (statusCode != 200) {
      result=read(response);
      String err=null;
      int errCode=0;
      try {
        JSONObject json=new JSONObject(result);
        err=json.getString("error");
        errCode=json.getInt("error_code");
      }
 catch (      JSONException e) {
        e.printStackTrace();
      }
      throw new WeiboException(String.format(err),errCode);
    }
    result=read(response);
    return result;
  }
 catch (  IOException e) {
    throw new WeiboException(e);
  }
}
