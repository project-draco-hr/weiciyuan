{
  try {
    KeyStore trustStore=KeyStore.getInstance(KeyStore.getDefaultType());
    trustStore.load(null,null);
    SSLSocketFactory sf=new MySSLSocketFactory(trustStore);
    sf.setHostnameVerifier(SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);
    HttpParams params=new BasicHttpParams();
    HttpConnectionParams.setConnectionTimeout(params,10000);
    HttpConnectionParams.setSoTimeout(params,10000);
    HttpProtocolParams.setVersion(params,HttpVersion.HTTP_1_1);
    HttpProtocolParams.setContentCharset(params,HTTP.UTF_8);
    SchemeRegistry registry=new SchemeRegistry();
    registry.register(new Scheme("http",PlainSocketFactory.getSocketFactory(),80));
    registry.register(new Scheme("https",sf,443));
    ClientConnectionManager ccm=new ThreadSafeClientConnManager(params,registry);
    HttpConnectionParams.setConnectionTimeout(params,Utility.SET_CONNECTION_TIMEOUT);
    HttpConnectionParams.setSoTimeout(params,Utility.SET_SOCKET_TIMEOUT);
    HttpClient client=new DefaultHttpClient(ccm,params);
    WifiManager wifiManager=(WifiManager)context.getSystemService(Context.WIFI_SERVICE);
    if (!wifiManager.isWifiEnabled()) {
      Uri uri=Uri.parse("content://telephony/carriers/preferapn");
      Cursor mCursor=context.getContentResolver().query(uri,null,null,null,null);
      if (mCursor != null && mCursor.moveToFirst()) {
        String proxyStr=mCursor.getString(mCursor.getColumnIndex("proxy"));
        if (proxyStr != null && proxyStr.trim().length() > 0) {
          HttpHost proxy=new HttpHost(proxyStr,80);
          client.getParams().setParameter(ConnRouteParams.DEFAULT_PROXY,proxy);
        }
        mCursor.close();
      }
    }
    return client;
  }
 catch (  Exception e) {
    return new DefaultHttpClient();
  }
}
