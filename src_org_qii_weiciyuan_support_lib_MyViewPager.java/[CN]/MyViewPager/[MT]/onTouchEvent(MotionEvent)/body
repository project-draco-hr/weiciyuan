{
  if (this.gestureDetector != null)   this.gestureDetector.onTouchEvent(ev);
  if ((ev.getActionMasked() == MotionEvent.ACTION_UP || ev.getActionMasked() == MotionEvent.ACTION_CANCEL) && (getCurrentItem() == 0)) {
    int x=(int)(ev.getRawX() - firstPosition[0]);
    firstPosition[0]=0f;
    firstPosition[1]=0f;
    isDragging=false;
    if (x > (Utility.getScreenWidth() / 2)) {
      activity.finish();
      activity.overridePendingTransition(R.anim.stay,R.anim.swipe_right_to_close);
      return true;
    }
 else     if (getCurrentItem() == 0) {
      this.topView.animate().translationX(0).setDuration(300L).withLayer().setListener(new AnimatorListenerAdapter(){
        @Override public void onAnimationEnd(        Animator animation){
          super.onAnimationEnd(animation);
          topView.animate().setListener(null);
        }
      }
);
    }
  }
  if (isDragging) {
    return true;
  }
  if (getCurrentItem() == 0) {
switch (ev.getActionMasked()) {
case MotionEvent.ACTION_MOVE:
      float x=ev.getRawX();
    if (x > firstPosition[0] + 10) {
      AppLogger.e("onTouchEvent 2");
      isDragging=true;
      return true;
    }
  break;
}
}
return super.onTouchEvent(ev);
}
