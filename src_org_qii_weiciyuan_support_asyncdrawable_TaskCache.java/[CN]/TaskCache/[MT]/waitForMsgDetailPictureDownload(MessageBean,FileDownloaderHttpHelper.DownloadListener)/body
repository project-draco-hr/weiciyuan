{
  while (true) {
    DownloadWorker downloadWorker=null;
    FileLocationMethod method;
    String middleUrl=msg.getBmiddle_pic();
    String largeUrl=msg.getOriginal_pic();
    String middlePath=FileManager.getFilePathFromUrl(msg.getBmiddle_pic(),FileLocationMethod.picture_bmiddle);
    String largePath=FileManager.getFilePathFromUrl(msg.getOriginal_pic(),FileLocationMethod.picture_large);
    downloadWorker=TaskCache.downloadTasks.get(largeUrl);
    boolean localFileExist=new File(largePath).exists();
    if (downloadWorker == null) {
      TaskCache.downloadTasks.get(middleUrl);
    }
    if (downloadWorker == null) {
      if (localFileExist) {
        return;
      }
 else {
        localFileExist=new File(middlePath).exists();
        if (localFileExist) {
          return;
        }
      }
      DownloadWorker newWorker=new DownloadWorker(middleUrl,FileLocationMethod.picture_bmiddle);
      downloadWorker=TaskCache.downloadTasks.putIfAbsent(middleUrl,newWorker);
      if (downloadWorker == null) {
        downloadWorker=newWorker;
        downloadWorker.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
      }
    }
    try {
      downloadWorker.addDownloadListener(downloadListener);
      downloadWorker.get(15,TimeUnit.SECONDS);
      return;
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
      return;
    }
catch (    ExecutionException e) {
      e.printStackTrace();
      return;
    }
catch (    TimeoutException e) {
      e.printStackTrace();
      return;
    }
catch (    CancellationException e) {
      downloadTasks.remove(middleUrl,downloadWorker);
    }
  }
}
