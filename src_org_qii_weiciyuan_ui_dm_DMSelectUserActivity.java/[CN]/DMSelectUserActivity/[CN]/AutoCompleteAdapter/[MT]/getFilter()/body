{
  Filter myFilter=new Filter(){
    @Override protected FilterResults performFiltering(    CharSequence constraint){
      FilterResults filterResults=new FilterResults();
      if (constraint != null) {
        activity.runOnUiThread(new Runnable(){
          @Override public void run(){
            suggestProgressBar.setVisibility(View.VISIBLE);
          }
        }
);
        SearchDao dao=new SearchDao(GlobalContext.getInstance().getSpecialToken(),constraint.toString());
        try {
          data=dao.getUserList().getUsers();
        }
 catch (        Exception e) {
        }
        filterResults.values=data;
        filterResults.count=data.size();
      }
      activity.runOnUiThread(new Runnable(){
        @Override public void run(){
          suggestProgressBar.setVisibility(View.INVISIBLE);
        }
      }
);
      return filterResults;
    }
    @Override public CharSequence convertResultToString(    Object resultValue){
      return ((UserBean)resultValue).getScreen_name();
    }
    @Override protected void publishResults(    CharSequence contraint,    FilterResults results){
      if (results != null && results.count > 0) {
        notifyDataSetChanged();
      }
 else {
        notifyDataSetInvalidated();
      }
    }
  }
;
  return myFilter;
}
