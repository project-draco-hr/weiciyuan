{
  this.topTipBar=bar;
  AutoScrollListView autoScrollListView=(AutoScrollListView)listView;
  autoScrollListView.setOnScrollListener(new AbsListView.OnScrollListener(){
    @Override public void onScrollStateChanged(    AbsListView view,    int scrollState){
    }
    @Override public void onScroll(    AbsListView view,    int firstVisibleItem,    int visibleItemCount,    int totalItemCount){
      VelocityListView velocityListView=(VelocityListView)view;
      if (velocityListView.getVelocity() < 0) {
        topTipBar.hideCount();
      }
 else       if (velocityListView.getVelocity() > 0) {
        if (topTipBar.getValues().size() == 0) {
          return;
        }
        View childView=Utility.getListViewItemViewFromPosition(listView,firstVisibleItem);
        if (childView == null) {
          return;
        }
        int position=firstVisibleItem - ((ListView)view).getHeaderViewsCount();
        if (childView.getTop() == 0 && position <= 0) {
          topTipBar.clearAndReset();
        }
 else {
          handle(position + 1);
        }
      }
    }
    private void handle(    int position){
      if (position > 0 && topTipBar != null && position < bean.size()) {
        MessageBean next=bean.get(position);
        if (next != null) {
          topTipBar.handle(next.getId(),bean.get(position - 1).getId());
        }
      }
    }
  }
);
}
