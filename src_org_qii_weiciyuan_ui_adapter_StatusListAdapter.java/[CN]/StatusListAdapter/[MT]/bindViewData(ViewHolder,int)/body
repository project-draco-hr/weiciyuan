{
  Drawable drawable=bg.get(holder);
  if (drawable != null) {
    holder.listview_root.setBackgroundDrawable(drawable);
  }
 else {
    drawable=holder.listview_root.getBackground();
    bg.put(holder,drawable);
  }
  if (listView.getCheckedItemPosition() == position + 1)   holder.listview_root.setBackgroundColor(checkedBG);
  final MessageBean msg=bean.get(position);
  UserBean user=msg.getUser();
  if (user != null) {
    holder.username.setVisibility(View.VISIBLE);
    if (!TextUtils.isEmpty(user.getRemark())) {
      holder.username.setText(new StringBuilder(user.getScreen_name()).append("(").append(user.getRemark()).append(")").toString());
    }
 else {
      holder.username.setText(user.getScreen_name());
    }
    if (!showOriStatus && !SettingUtility.getEnableCommentRepostListAvatar()) {
      holder.avatar.setLayoutParams(new RelativeLayout.LayoutParams(0,0));
    }
 else {
      buildAvatar(holder.avatar,position,user);
    }
  }
 else {
    holder.username.setVisibility(View.INVISIBLE);
    holder.avatar.setVisibility(View.INVISIBLE);
  }
  if (!TextUtils.isEmpty(msg.getListViewSpannableString())) {
    holder.content.setText(msg.getListViewSpannableString());
  }
 else {
    ListViewTool.addJustHighLightLinks(msg);
    holder.content.setText(msg.getListViewSpannableString());
  }
  holder.listview_root.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      if (!((AbstractTimeLineFragment)fragment).clearActionModeIfOpen()) {
        Intent intent=new Intent(getActivity(),BrowserWeiboMsgActivity.class);
        intent.putExtra("msg",msg);
        intent.putExtra("token",GlobalContext.getInstance().getSpecialToken());
        fragment.startActivityForResult(intent,0);
      }
    }
  }
);
  holder.username.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
      holder.listview_root.onTouchEvent(event);
      return false;
    }
  }
);
  holder.time.setOnTouchListener(new View.OnTouchListener(){
    @Override public boolean onTouch(    View v,    MotionEvent event){
      holder.listview_root.onTouchEvent(event);
      return false;
    }
  }
);
  if (holder.content.getMovementMethod() != MyLinkMovementMethod.getInstance())   holder.content.setMovementMethod(MyLinkMovementMethod.getInstance());
  if (holder.repost_content.getMovementMethod() != MyLinkMovementMethod.getInstance())   holder.repost_content.setMovementMethod(MyLinkMovementMethod.getInstance());
  View.OnClickListener onClickListener=new View.OnClickListener(){
    @Override public void onClick(    View v){
      TextView tv=(TextView)v;
      int start=tv.getSelectionStart();
      int end=tv.getSelectionEnd();
      SpannableString completeText=(SpannableString)((TextView)v).getText();
      boolean isNotLink=start == -1 || end == -1;
      if (isNotLink && completeText.getSpanStart(this) == -1) {
        holder.listview_root.dispatchTouchEvent(MotionEvent.obtain(SystemClock.uptimeMillis(),SystemClock.uptimeMillis(),MotionEvent.ACTION_DOWN,0,0,0));
        holder.listview_root.dispatchTouchEvent(MotionEvent.obtain(SystemClock.uptimeMillis(),SystemClock.uptimeMillis(),MotionEvent.ACTION_UP,0,0,0));
      }
    }
  }
;
  holder.content.setOnClickListener(onClickListener);
  holder.repost_content.setOnClickListener(onClickListener);
  holder.time.setTime(msg.getMills());
  if (showOriStatus) {
    if (msg.getReposts_count() == 0 && msg.getComments_count() == 0) {
      holder.count_layout.setVisibility(View.GONE);
    }
 else {
      holder.count_layout.setVisibility(View.VISIBLE);
      if (msg.getReposts_count() > 0) {
        holder.repost_count.setText(String.valueOf(msg.getReposts_count()));
        holder.repost_count.setVisibility(View.VISIBLE);
      }
 else {
        holder.repost_count.setVisibility(View.GONE);
      }
      if (msg.getComments_count() > 0) {
        holder.comment_count.setText(String.valueOf(msg.getComments_count()));
        holder.comment_count.setVisibility(View.VISIBLE);
      }
 else {
        holder.comment_count.setVisibility(View.GONE);
      }
    }
  }
  holder.repost_content.setVisibility(View.GONE);
  holder.repost_content_pic.setVisibility(View.GONE);
  holder.content_pic.setVisibility(View.GONE);
  if (!TextUtils.isEmpty(msg.getThumbnail_pic())) {
    buildPic(msg,holder.content_pic,position);
  }
  MessageBean repost_msg=msg.getRetweeted_status();
  if (repost_msg != null && showOriStatus) {
    holder.repost_layout.setVisibility(View.VISIBLE);
    holder.repost_flag.setVisibility(View.VISIBLE);
    if (holder.content_pic.getVisibility() != View.GONE)     holder.content_pic.setVisibility(View.GONE);
    buildRepostContent(repost_msg,holder,position);
  }
 else {
    holder.repost_layout.setVisibility(View.GONE);
    holder.repost_flag.setVisibility(View.GONE);
  }
}
