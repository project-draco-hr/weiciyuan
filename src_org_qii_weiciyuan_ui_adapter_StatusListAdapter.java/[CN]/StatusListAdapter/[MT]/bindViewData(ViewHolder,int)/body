{
  Drawable drawable=bg.get(holder);
  if (drawable != null) {
    holder.listview_root.setBackgroundDrawable(drawable);
  }
 else {
    drawable=holder.listview_root.getBackground();
    bg.put(holder,drawable);
  }
  if (listView.getCheckedItemPosition() == position + listView.getHeaderViewsCount())   holder.listview_root.setBackgroundColor(checkedBG);
  final MessageBean msg=bean.get(position);
  UserBean user=msg.getUser();
  if (user != null) {
    holder.username.setVisibility(View.VISIBLE);
    if (!TextUtils.isEmpty(user.getRemark())) {
      holder.username.setText(new StringBuilder(user.getScreen_name()).append("(").append(user.getRemark()).append(")").toString());
    }
 else {
      holder.username.setText(user.getScreen_name());
    }
    if (!showOriStatus && !SettingUtility.getEnableCommentRepostListAvatar()) {
      holder.avatar.setLayoutParams(new RelativeLayout.LayoutParams(0,0));
    }
 else {
      buildAvatar(holder.avatar,position,user);
    }
  }
 else {
    holder.username.setVisibility(View.INVISIBLE);
    holder.avatar.setVisibility(View.INVISIBLE);
  }
  if (!TextUtils.isEmpty(msg.getListViewSpannableString())) {
    boolean haveCachedHeight=msgHeights.get(msg.getIdLong()) != null;
    ViewGroup.LayoutParams layoutParams=holder.content.getLayoutParams();
    if (haveCachedHeight) {
      layoutParams.height=msgHeights.get(msg.getIdLong());
    }
 else {
      layoutParams.height=ViewGroup.LayoutParams.WRAP_CONTENT;
    }
    boolean haveCachedWidth=msgWidths.get(msg.getIdLong()) != null;
    if (haveCachedWidth) {
      layoutParams.width=msgWidths.get(msg.getIdLong());
    }
 else {
      layoutParams.width=ViewGroup.LayoutParams.WRAP_CONTENT;
    }
    holder.content.requestLayout();
    holder.content.setText(msg.getListViewSpannableString());
    if (!haveCachedHeight) {
      msgHeights.append(msg.getIdLong(),layoutParams.height);
    }
    if (!haveCachedWidth) {
      msgWidths.append(msg.getIdLong(),layoutParams.width);
    }
  }
 else {
    ListViewTool.addJustHighLightLinks(msg);
    holder.content.setText(msg.getListViewSpannableString());
  }
  holder.time.setTime(msg.getMills());
  if (holder.source != null)   holder.source.setText(msg.getSourceString());
  if (showOriStatus) {
    boolean checkRepostsCount=(msg.getReposts_count() != 0);
    boolean checkCommentsCount=(msg.getComments_count() != 0);
    boolean checkPic=(!TextUtils.isEmpty(msg.getThumbnail_pic()) || (msg.getRetweeted_status() != null && !TextUtils.isEmpty(msg.getRetweeted_status().getThumbnail_pic())));
    checkPic=(checkPic && !SettingUtility.isEnablePic());
    boolean checkGps=(msg.getGeo() != null);
    if (!checkRepostsCount && !checkCommentsCount && !checkPic&& !checkGps) {
      holder.count_layout.setVisibility(View.GONE);
    }
 else {
      holder.count_layout.setVisibility(View.VISIBLE);
      if (checkPic) {
        holder.timeline_pic.setVisibility(View.VISIBLE);
      }
 else {
        holder.timeline_pic.setVisibility(View.GONE);
      }
      if (checkGps) {
        holder.timeline_gps.setVisibility(View.VISIBLE);
      }
 else {
        holder.timeline_gps.setVisibility(View.GONE);
      }
      if (checkRepostsCount) {
        holder.repost_count.setText(String.valueOf(msg.getReposts_count()));
        holder.repost_count.setVisibility(View.VISIBLE);
      }
 else {
        holder.repost_count.setVisibility(View.GONE);
      }
      if (checkCommentsCount) {
        holder.comment_count.setText(String.valueOf(msg.getComments_count()));
        holder.comment_count.setVisibility(View.VISIBLE);
      }
 else {
        holder.comment_count.setVisibility(View.GONE);
      }
    }
  }
  holder.repost_content.setVisibility(View.GONE);
  holder.repost_content_pic.setVisibility(View.GONE);
  holder.content_pic.setVisibility(View.GONE);
  if (!TextUtils.isEmpty(msg.getThumbnail_pic())) {
    buildPic(msg,holder.content_pic,position);
  }
  MessageBean repost_msg=msg.getRetweeted_status();
  if (repost_msg != null && showOriStatus) {
    if (holder.repost_layout != null)     holder.repost_layout.setVisibility(View.VISIBLE);
    holder.repost_flag.setVisibility(View.VISIBLE);
    if (holder.content_pic.getVisibility() != View.GONE)     holder.content_pic.setVisibility(View.GONE);
    buildRepostContent(msg,repost_msg,holder,position);
  }
 else {
    if (holder.repost_layout != null)     holder.repost_layout.setVisibility(View.GONE);
    holder.repost_flag.setVisibility(View.GONE);
  }
}
