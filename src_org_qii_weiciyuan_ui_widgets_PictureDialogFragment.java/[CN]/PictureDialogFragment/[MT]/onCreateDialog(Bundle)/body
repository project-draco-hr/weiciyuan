{
  AlertDialog.Builder builder=new AlertDialog.Builder(getActivity());
  View view=getActivity().getLayoutInflater().inflate(R.layout.fragment_listview_pic_preview_layout,null);
  imageView=(WebView)view.findViewById(R.id.iv);
  imageView.getSettings().setSupportZoom(true);
  imageView.getSettings().setBuiltInZoomControls(true);
  imageView.getSettings().setDisplayZoomControls(false);
  imageView.setBackgroundColor(getResources().getColor(R.color.transparent));
  imageView.getSettings().setDefaultZoom(WebSettings.ZoomDensity.FAR);
  pb=(ProgressBar)view.findViewById(R.id.pb);
  fl=(FrameLayout)view.findViewById(R.id.fl);
  builder.setView(view);
  builder.setPositiveButton(getString(R.string.ori_picture),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      Intent intent=new Intent(getActivity(),BrowserBigPicActivity.class);
      intent.putExtra("url",bigUrl);
      startActivity(intent);
    }
  }
);
  builder.setNeutralButton(getString(R.string.close),new DialogInterface.OnClickListener(){
    @Override public void onClick(    DialogInterface dialog,    int which){
      picTask.cancel(true);
      dismissAllowingStateLoss();
      if (!GlobalContext.getInstance().isEnablePic() && GlobalContext.getInstance().getEnableBigPic()) {
        AbstractTimeLineFragment fragment=(AbstractTimeLineFragment)getTargetFragment();
        fragment.getAdapter().notifyDataSetChanged();
      }
    }
  }
);
  if (savedInstanceState != null)   url=savedInstanceState.getString("url");
  return builder.create();
}
