{
  int count=unreadBean.getMention_cmt();
  if (count == 0) {
    return;
  }
  Notification.Builder builder=new Notification.Builder(getBaseContext()).setTicker(ticker).setContentText(accountBean.getUsernick()).setSmallIcon(R.drawable.ic_notification).setAutoCancel(true).setContentIntent(getPendingIntent()).setOnlyAlertOnce(true);
  builder.setContentTitle(String.format(GlobalContext.getInstance().getString(R.string.new_mentions_comment),String.valueOf(count)));
  if (count > 1) {
    builder.setNumber(count);
  }
  if (clearNotificationEventReceiver != null) {
    Utility.unregisterReceiverIgnoredReceiverNotRegisteredException(GlobalContext.getInstance(),clearNotificationEventReceiver);
    JBMentionsCommentNotificationServiceHelper.clearNotificationEventReceiver=null;
  }
  clearNotificationEventReceiver=new RecordOperationAppBroadcastReceiver(){
    @Override public void onReceive(    Context context,    Intent intent){
      new Thread(new Runnable(){
        @Override public void run(){
          try {
            new ClearUnreadDao(accountBean.getAccess_token()).clearMentionCommentUnread(unreadBean,accountBean.getUid());
          }
 catch (          WeiboException ignored) {
          }
 finally {
            Utility.unregisterReceiverIgnoredReceiverNotRegisteredException(GlobalContext.getInstance(),clearNotificationEventReceiver);
            JBMentionsCommentNotificationServiceHelper.clearNotificationEventReceiver=null;
          }
        }
      }
).start();
    }
  }
;
  IntentFilter intentFilter=new IntentFilter(RESET_UNREAD_MENTIONS_COMMENT_ACTION);
  GlobalContext.getInstance().registerReceiver(clearNotificationEventReceiver,intentFilter);
  Intent broadcastIntent=new Intent(RESET_UNREAD_MENTIONS_COMMENT_ACTION);
  PendingIntent deletedPendingIntent=PendingIntent.getBroadcast(GlobalContext.getInstance(),0,broadcastIntent,PendingIntent.FLAG_UPDATE_CURRENT);
  builder.setDeleteIntent(deletedPendingIntent);
  Intent intent=new Intent(getApplicationContext(),WriteReplyToCommentActivity.class);
  intent.putExtra("token",accountBean.getAccess_token());
  intent.putExtra("msg",data.getItem(0));
  PendingIntent pendingIntent=PendingIntent.getActivity(getApplicationContext(),0,intent,PendingIntent.FLAG_UPDATE_CURRENT);
  builder.addAction(R.drawable.reply_to_comment_light,getApplicationContext().getString(R.string.reply_to_comment),pendingIntent);
  if (count > 1) {
    Intent nextIntent=new Intent(JBMentionsCommentNotificationServiceHelper.this,JBMentionsCommentNotificationServiceHelper.class);
    nextIntent.putExtra(NotificationServiceHelper.ACCOUNT_ARG,accountBean);
    nextIntent.putExtra(NotificationServiceHelper.MENTIONS_COMMENT_ARG,data);
    nextIntent.putExtra(NotificationServiceHelper.UNREAD_ARG,unreadBean);
    nextIntent.putExtra(NotificationServiceHelper.PENDING_INTENT_INNER_ARG,clickToOpenAppPendingIntentInner);
    nextIntent.putExtra(NotificationServiceHelper.TICKER,ticker);
    String actionName;
    int nextIndex;
    int actionDrawable;
    if (currentIndex < count - 1) {
      nextIndex=currentIndex + 1;
      actionName=getString(R.string.next_message);
      actionDrawable=R.drawable.notification_action_next;
    }
 else {
      nextIndex=0;
      actionName=getString(R.string.first_message);
      actionDrawable=R.drawable.notification_action_previous;
    }
    nextIntent.putExtra(NotificationServiceHelper.CURRENT_INDEX_ARG,nextIndex);
    PendingIntent retrySendIntent=PendingIntent.getService(JBMentionsCommentNotificationServiceHelper.this,0,nextIntent,PendingIntent.FLAG_UPDATE_CURRENT);
    builder.addAction(actionDrawable,actionName,retrySendIntent);
  }
  Notification.BigTextStyle bigTextStyle=new Notification.BigTextStyle(builder);
  bigTextStyle.setBigContentTitle("@" + data.getItem(currentIndex).getUser().getScreen_name() + getString(R.string.comment_at_to_you));
  bigTextStyle.bigText(data.getItem(currentIndex).getText());
  String summaryText;
  if (count > 1) {
    summaryText=accountBean.getUsernick() + "(" + (currentIndex + 1)+ "/"+ count+ ")";
  }
 else {
    summaryText=accountBean.getUsernick();
  }
  bigTextStyle.setSummaryText(summaryText);
  builder.setStyle(bigTextStyle);
  Utility.configVibrateLedRingTone(builder);
  NotificationManager notificationManager=(NotificationManager)getApplicationContext().getSystemService(NOTIFICATION_SERVICE);
  notificationManager.notify(getMentionsCommentNotificationId(accountBean),builder.build());
}
