{
  if (bitmapPath.endsWith(".gif")) {
    readGif(gif,large,readError,url,bitmapPath);
    return;
  }
  if (!ImageUtility.isThisBitmapCanRead(bitmapPath)) {
    Toast.makeText(GalleryActivity.this,R.string.download_finished_but_cant_read_picture_file,Toast.LENGTH_SHORT).show();
  }
  boolean isThisBitmapTooLarge=ImageUtility.isThisBitmapTooLargeToRead(bitmapPath);
  if (isThisBitmapTooLarge && !alreadyShowPicturesTooLargeHint) {
    Toast.makeText(GalleryActivity.this,R.string.picture_is_too_large_so_enable_software_layer,Toast.LENGTH_LONG).show();
    alreadyShowPicturesTooLargeHint=true;
  }
  if (isThisBitmapTooLarge) {
    readLarge(large,url,bitmapPath);
    return;
  }
  if (imageView.getDrawable() != null)   return;
  new MyAsyncTask<Void,Bitmap,Bitmap>(){
    @Override protected Bitmap doInBackground(    Void... params){
      Bitmap bitmap=null;
      try {
        bitmap=ImageUtility.decodeBitmapFromSDCard(bitmapPath,IMAGEVIEW_SOFT_LAYER_MAX_WIDTH,IMAGEVIEW_SOFT_LAYER_MAX_HEIGHT);
      }
 catch (      OutOfMemoryError ignored) {
        GlobalContext.getInstance().getBitmapCache().evictAll();
        try {
          bitmap=ImageUtility.decodeBitmapFromSDCard(bitmapPath,IMAGEVIEW_SOFT_LAYER_MAX_WIDTH,IMAGEVIEW_SOFT_LAYER_MAX_HEIGHT);
        }
 catch (        OutOfMemoryError ignoredToo) {
        }
      }
      return bitmap;
    }
    @Override protected void onPostExecute(    Bitmap bitmap){
      super.onPostExecute(bitmap);
      if (imageView.getDrawable() != null)       return;
      if (bitmap != null) {
        imageView.setVisibility(View.VISIBLE);
        imageView.setImageBitmap(bitmap);
        bindImageViewLongClickListener(imageView,url,bitmapPath);
        readError.setVisibility(View.INVISIBLE);
      }
 else {
        readError.setText(getString(R.string.picture_read_failed));
        imageView.setVisibility(View.INVISIBLE);
        readError.setVisibility(View.VISIBLE);
      }
    }
  }
.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
}
