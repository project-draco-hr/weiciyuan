{
  String url=URLHelper.getRepostListById();
  Map<String,String> map=new HashMap<String,String>();
  map.put("access_token",access_token);
  map.put("id",id);
  map.put("since_id",since_id);
  map.put("max_id",max_id);
  map.put("count",count);
  map.put("page",page);
  map.put("filter_by_author",filter_by_author);
  String jsonData=HttpUtility.getInstance().executeNormalTask(HttpMethod.Get,url,map);
  Gson gson=new Gson();
  RepostListBean value=null;
  try {
    value=gson.fromJson(jsonData,RepostListBean.class);
  }
 catch (  JsonSyntaxException e) {
    ActivityUtils.showTips("????????????????????????");
    AppLogger.e(e.getMessage());
  }
  if (value != null && value.getReposts().size() > 0) {
    List<MessageBean> msgList=value.getReposts();
    Iterator<MessageBean> iterator=msgList.iterator();
    while (iterator.hasNext()) {
      MessageBean msg=iterator.next();
      if (msg.getUser() == null) {
        iterator.remove();
      }
 else {
        msg.getListViewSpannableString();
        TimeTool.dealMills(msg);
      }
    }
  }
  return value;
}
