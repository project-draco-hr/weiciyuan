{
  TimeLinePosition position=getPosition(accountId);
  Gson gson=new Gson();
  MessageListBean result=new MessageListBean();
  int limit=position.position + AppConfig.DB_CACHE_COUNT_OFFSET > AppConfig.DEFAULT_MSG_COUNT_50 ? position.position + AppConfig.DB_CACHE_COUNT_OFFSET : AppConfig.DEFAULT_MSG_COUNT_50;
  List<MessageBean> msgList=new ArrayList<MessageBean>();
  String sql="select * from " + RepostsTable.RepostDataTable.TABLE_NAME + " where "+ RepostsTable.RepostDataTable.ACCOUNTID+ "  = "+ accountId+ " order by "+ RepostsTable.RepostDataTable.MBLOGID+ " desc limit "+ limit;
  Cursor c=getRsd().rawQuery(sql,null);
  while (c.moveToNext()) {
    String json=c.getString(c.getColumnIndex(RepostsTable.RepostDataTable.JSONDATA));
    if (!TextUtils.isEmpty(json)) {
      try {
        MessageBean value=gson.fromJson(json,MessageBean.class);
        if (!value.isMiddleUnreadItem()) {
          value.getListViewSpannableString();
        }
        msgList.add(value);
      }
 catch (      JsonSyntaxException e) {
        AppLogger.e(e.getMessage());
      }
    }
 else {
      msgList.add(null);
    }
  }
  result.setStatuses(msgList);
  c.close();
  MentionTimeLineData mentionTimeLineData=new MentionTimeLineData(result,position);
  return mentionTimeLineData;
}
