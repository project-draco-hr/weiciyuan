{
  if (SettingUtility.isEnablePic()) {
    view.setVisibility(View.VISIBLE);
    view.setOnClickListener(new View.OnClickListener(){
      @Override public void onClick(      View v){
        ImageView imageView=view.getImageView();
        Drawable drawable=imageView.getDrawable();
        Bitmap bitmap=null;
        if (drawable instanceof BitmapDrawable) {
          bitmap=((BitmapDrawable)drawable).getBitmap();
        }
        Rect rect=new Rect();
        boolean result=imageView.getGlobalVisibleRect(rect);
        boolean checkWidth=rect.width() < imageView.getWidth();
        boolean checkHeight=rect.height() < imageView.getHeight();
        boolean clipped=!result || checkWidth || checkHeight;
        if (bitmap != null && !clipped) {
          int bitmapWidth=bitmap.getWidth();
          int bitmapHeight=bitmap.getHeight();
          int imageViewWidth=imageView.getWidth();
          int imageviewHeight=imageView.getHeight();
          float startScale;
          if ((float)imageViewWidth / bitmapWidth > (float)imageviewHeight / bitmapHeight) {
            startScale=(float)imageviewHeight / bitmapHeight;
          }
 else {
            startScale=(float)imageViewWidth / bitmapWidth;
          }
          bitmapHeight=(int)(bitmapHeight * startScale);
          bitmapWidth=(int)(bitmapWidth * startScale);
          int deltaX=(imageViewWidth - bitmapWidth) / 2;
          int deltaY=(imageviewHeight - bitmapHeight) / 2;
          rect.set(rect.left + deltaX,rect.top + deltaY,rect.right - deltaX,rect.bottom - deltaY);
        }
        Intent intent=new Intent(getActivity(),GalleryActivity.class);
        intent.putExtra("msg",msg);
        if (!clipped)         intent.putExtra("rect",rect);
        getActivity().startActivity(intent);
      }
    }
);
    buildPic(msg,view);
  }
 else {
    view.setVisibility(View.GONE);
  }
}
