{
  final MessageBean msg=bean.getStatuses().get(position);
  MessageBean repost_msg=msg.getRetweeted_status();
  if (msg.getUser() != null) {
    holder.username.setText(msg.getUser().getScreen_name());
    String image_url=msg.getUser().getProfile_image_url();
    if (!TextUtils.isEmpty(image_url)) {
      commander.downloadAvatar(holder.avatar,msg.getUser().getProfile_image_url(),position,listView);
    }
  }
 else {
    holder.username.setVisibility(View.INVISIBLE);
    holder.avatar.setVisibility(View.INVISIBLE);
  }
  holder.content.setText(msg.getText());
  if (!TextUtils.isEmpty(msg.getListviewItemShowTime())) {
    holder.time.setText(msg.getListviewItemShowTime());
  }
 else {
    holder.time.setText(msg.getCreated_at());
  }
  holder.repost_content.setVisibility(View.GONE);
  holder.repost_content_pic.setVisibility(View.GONE);
  holder.content_pic.setVisibility(View.GONE);
  if (repost_msg != null) {
    buildRepostContent(repost_msg,holder,position);
  }
 else   if (!TextUtils.isEmpty(msg.getThumbnail_pic())) {
    buildContentPic(msg,holder,position);
  }
  holder.avatar.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      Intent intent=new Intent(activity,UserInfoActivity.class);
      intent.putExtra("token",((IToken)activity).getToken());
      intent.putExtra("user",msg.getUser());
      activity.startActivity(intent);
    }
  }
);
}
