{
synchronized (TimeLineBitmapDownloader.pauseDownloadWorkLock) {
    while (TimeLineBitmapDownloader.pauseDownloadWork && !isCancelled()) {
      try {
        TimeLineBitmapDownloader.pauseDownloadWorkLock.wait();
      }
 catch (      InterruptedException e) {
        Thread.currentThread().interrupt();
      }
    }
  }
  if (isCancelled())   return false;
  String filePath=FileManager.getFilePathFromUrl(url,method);
  String actualDownloadUrl=url;
switch (method) {
case picture_thumbnail:
    actualDownloadUrl=url.replace("thumbnail","webp180");
  break;
}
boolean result=ImageTool.getBitmapFromNetWork(actualDownloadUrl,filePath,new FileDownloaderHttpHelper.DownloadListener(){
@Override public void pushProgress(int progress,int max){
  publishProgress(progress,max);
}
}
);
TaskCache.removeDownloadTask(url,DownloadWorker.this);
return result;
}
