{
  PullToRefreshListView pullToRefreshListView=new PullToRefreshListView(getActivity());
  pullToRefreshListView.setMode(PullToRefreshBase.Mode.DISABLED);
  pullToRefreshListView.setOnLastItemVisibleListener(new PullToRefreshBase.OnLastItemVisibleListener(){
    @Override public void onLastItemVisible(){
      if (isCommentList) {
        loadOldCommentData();
      }
 else {
        loadOldRepostData();
      }
    }
  }
);
  pullToRefreshListView.setOnScrollListener(listViewOnScrollListener);
  listView=pullToRefreshListView.getRefreshableView();
  View header=inflater.inflate(R.layout.browserweibomsgactivity_layout,listView,false);
  listView.addHeaderView(header);
  View switchView=inflater.inflate(R.layout.browserweibomsgfragment_switch_list_type_header,listView,false);
  listView.addHeaderView(switchView);
  switchView.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
    }
  }
);
  View progressHeaderLayout=inflater.inflate(R.layout.browserweibomsgfragment_progress_header,listView,false);
  progressHeader=progressHeaderLayout.findViewById(R.id.progressbar);
  progressHeader.setVisibility(View.GONE);
  listView.addHeaderView(progressHeaderLayout);
  footerView=inflater.inflate(R.layout.listview_footer_layout,null);
  listView.addFooterView(footerView);
  dismissFooterView();
  repostTab=(TextView)switchView.findViewById(R.id.repost);
  commentTab=(TextView)switchView.findViewById(R.id.comment);
  repostTab.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      listView.setOnItemClickListener(repostOnItemClickListener);
      listView.setOnItemLongClickListener(repostOnItemLongClickListener);
      if (hasActionMode()) {
        mActionMode.finish();
        mActionMode=null;
      }
      dismissFooterView();
      if (isCommentList) {
        isCommentList=false;
        adapter.switchToRepostType();
        repostTab.setTextColor(getResources().getColor(R.color.orange));
        commentTab.setTextColor(getResources().getColor(R.color.black));
        if (repostList.getSize() == 0) {
          loadNewRepostData();
        }
 else {
          Loader loader=getLoaderManager().getLoader(NEW_REPOST_LOADER_ID);
          if (loader != null) {
            progressHeader.setVisibility(View.VISIBLE);
          }
 else {
            progressHeader.setVisibility(View.GONE);
          }
        }
      }
 else {
        loadNewRepostData();
      }
    }
  }
);
  commentTab.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      listView.setOnItemClickListener(commentOnItemClickListener);
      listView.setOnItemLongClickListener(commentOnItemLongClickListener);
      if (hasActionMode()) {
        mActionMode.finish();
        mActionMode=null;
      }
      dismissFooterView();
      if (!isCommentList) {
        isCommentList=true;
        adapter.switchToCommentType();
        commentTab.setTextColor(getResources().getColor(R.color.orange));
        repostTab.setTextColor(getResources().getColor(R.color.black));
        if (commentList.getSize() == 0) {
          loadNewCommentData();
        }
 else {
          Loader loader=getLoaderManager().getLoader(NEW_COMMENT_LOADER_ID);
          if (loader != null) {
            progressHeader.setVisibility(View.VISIBLE);
          }
 else {
            progressHeader.setVisibility(View.GONE);
          }
        }
      }
 else {
        loadNewCommentData();
      }
    }
  }
);
  commentTab.setTextColor(getResources().getColor(R.color.orange));
  listView.setChoiceMode(AbsListView.CHOICE_MODE_SINGLE);
  listView.setOnItemClickListener(commentOnItemClickListener);
  listView.setOnItemLongClickListener(commentOnItemLongClickListener);
  initView(header,savedInstanceState);
  adapter=new BrowserWeiboMsgCommentAndRepostAdapter(this,listView,commentList.getItemList(),repostList.getItemList());
  listView.setAdapter(adapter);
  adapter.notifyDataSetChanged();
  listView.setHeaderDividersEnabled(false);
  return pullToRefreshListView;
}
