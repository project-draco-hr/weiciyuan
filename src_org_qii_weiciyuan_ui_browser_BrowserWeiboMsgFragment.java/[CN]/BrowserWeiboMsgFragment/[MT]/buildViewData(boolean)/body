{
  if (msg.getUser() != null) {
    if (TextUtils.isEmpty(msg.getUser().getRemark()))     layout.username.setText(msg.getUser().getScreen_name());
 else     layout.username.setText(msg.getUser().getScreen_name() + "(" + msg.getUser().getRemark()+ ")");
    ((AbstractAppActivity)getActivity()).getBitmapDownloader().downloadAvatar(layout.avatar,msg.getUser());
  }
  layout.content.setText(msg.getListViewSpannableString());
  layout.content.setMovementMethod(LongClickableLinkMovementMethod.getInstance());
  layout.time.setText(msg.getTimeInFormat());
  if (msg.getGeo() != null) {
    layout.mapView.setVisibility(View.VISIBLE);
    if (Utility.isTaskStopped(geoTask)) {
      geoTask=new GetWeiboLocationInfoTask(getActivity(),msg.getGeo(),layout.mapView,layout.location);
      geoTask.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
    }
  }
 else {
    layout.mapView.setVisibility(View.GONE);
  }
  if (!TextUtils.isEmpty(msg.getSource())) {
    layout.source.setText(Html.fromHtml(msg.getSource()).toString());
  }
  if (!TextUtils.isEmpty(msg.getBmiddle_pic()) && msg.getRetweeted_status() == null) {
    if (Utility.isTaskStopped(picTask)) {
      layout.content_pic.setVisibility(View.VISIBLE);
      if (refreshPic) {
        picTask=new MsgDetailReadWorker(layout.content_pic,msg);
        picTask.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
      }
    }
  }
  MessageBean repostMsg=msg.getRetweeted_status();
  layout.repost_layout.setVisibility(repostMsg != null ? View.VISIBLE : View.GONE);
  if (repostMsg != null) {
    layout.content_pic.setVisibility(View.GONE);
    layout.repost_layout.setVisibility(View.VISIBLE);
    layout.recontent.setVisibility(View.VISIBLE);
    layout.recontent.setMovementMethod(LongClickableLinkMovementMethod.getInstance());
    if (repostMsg.getUser() != null) {
      layout.recontent.setText(repostMsg.getListViewSpannableString());
      buildRepostCount();
    }
 else {
      layout.recontent.setText(repostMsg.getListViewSpannableString());
    }
    if (!TextUtils.isEmpty(repostMsg.getBmiddle_pic())) {
      layout.repost_pic.setVisibility(View.VISIBLE);
      if (Utility.isTaskStopped(picTask)) {
        if (refreshPic) {
          picTask=new MsgDetailReadWorker(layout.repost_pic,msg.getRetweeted_status());
          picTask.executeOnExecutor(MyAsyncTask.THREAD_POOL_EXECUTOR);
        }
      }
    }
 else {
      layout.repost_pic.setVisibility(View.GONE);
    }
  }
  Utility.buildTabCount(commentTab,getString(R.string.comments),msg.getComments_count());
  Utility.buildTabCount(repostTab,getString(R.string.repost),msg.getReposts_count());
}
