{
  if (!isPullToRefreshEnabled()) {
    return false;
  }
  if (!mScrollingWhileRefreshingEnabled && isRefreshing()) {
    return true;
  }
  if (event.getAction() == MotionEvent.ACTION_DOWN && event.getEdgeFlags() != 0) {
    return false;
  }
switch (event.getAction()) {
case MotionEvent.ACTION_MOVE:
{
      if (mIsBeingDragged) {
        mLastMotionY=event.getY();
        mLastMotionX=event.getX();
        pullEvent();
        return true;
      }
      break;
    }
case MotionEvent.ACTION_DOWN:
{
    if (isReadyForPull()) {
      mLastMotionY=mInitialMotionY=event.getY();
      mLastMotionX=mInitialMotionX=event.getX();
      return true;
    }
    break;
  }
case MotionEvent.ACTION_CANCEL:
case MotionEvent.ACTION_UP:
{
  if (mIsBeingDragged) {
    mIsBeingDragged=false;
    if (mState == State.RELEASE_TO_REFRESH && (null != mOnRefreshListener || null != mOnRefreshListener2)) {
      setState(State.REFRESHING,true);
      return true;
    }
    if (isRefreshing()) {
      if (getRefreshableView() instanceof AdapterView) {
        int count=0;
        Adapter adapter=((AdapterView)getRefreshableView()).getAdapter();
        if (adapter instanceof HeaderViewListAdapter) {
          count=((HeaderViewListAdapter)adapter).getWrappedAdapter().getCount();
        }
        if (count > 0) {
          smoothScrollTo(0);
          return true;
        }
switch (mCurrentMode) {
case MANUAL_REFRESH_ONLY:
case PULL_FROM_END:
          smoothScrollTo(getFooterSize(),null);
        break;
default :
case PULL_FROM_START:
      smoothScrollTo(-getHeaderSize(),null);
    break;
}
return true;
}
smoothScrollTo(0);
return true;
}
setState(State.GIVE_UP);
return true;
}
break;
}
}
return false;
}
