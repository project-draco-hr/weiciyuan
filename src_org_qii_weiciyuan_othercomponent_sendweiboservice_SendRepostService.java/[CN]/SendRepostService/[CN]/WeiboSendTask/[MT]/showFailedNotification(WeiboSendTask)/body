{
  Notification.Builder builder=new Notification.Builder(SendRepostService.this).setTicker(getString(R.string.send_failed_and_save_to_draft)).setContentTitle(getString(R.string.send_faile_click_to_open)).setContentText(content).setOnlyAlertOnce(true).setAutoCancel(true).setSmallIcon(R.drawable.send_failed).setOngoing(false);
  Intent notifyIntent=new Intent(SendRepostService.this,DraftActivity.class);
  PendingIntent pendingIntent=PendingIntent.getActivity(SendRepostService.this,0,notifyIntent,PendingIntent.FLAG_UPDATE_CURRENT);
  builder.setContentIntent(pendingIntent);
  Notification notification;
  if (Utility.isJB()) {
    Notification.BigTextStyle bigTextStyle=new Notification.BigTextStyle(builder);
    bigTextStyle.setBigContentTitle(getString(R.string.send_faile_click_to_open));
    bigTextStyle.bigText(content);
    bigTextStyle.setSummaryText(account.getUsernick());
    builder.setStyle(bigTextStyle);
    Intent intent=new Intent(SendRepostService.this,SendRepostService.class);
    intent.putExtra("oriMsg",oriMsg);
    intent.putExtra("content",content);
    intent.putExtra("is_comment",is_comment);
    intent.putExtra("token",token);
    intent.putExtra("account",account);
    intent.putExtra("lastNotificationId",tasksNotifications.get(task));
    PendingIntent retrySendIntent=PendingIntent.getService(SendRepostService.this,0,intent,PendingIntent.FLAG_UPDATE_CURRENT);
    builder.addAction(R.drawable.send_light,getString(R.string.retry_send),retrySendIntent);
    notification=builder.build();
  }
 else {
    notification=builder.getNotification();
  }
  final int id=tasksNotifications.get(task);
  NotificationUtility.show(notification,id);
  handler.postDelayed(new Runnable(){
    @Override public void run(){
      stopServiceIfTasksAreEnd(task);
    }
  }
,3000);
}
