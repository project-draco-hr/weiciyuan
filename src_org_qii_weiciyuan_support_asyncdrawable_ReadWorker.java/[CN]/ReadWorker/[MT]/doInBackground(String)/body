{
synchronized (TimeLineBitmapDownloader.pauseReadWorkLock) {
    while (TimeLineBitmapDownloader.pauseReadWork && !isCancelled()) {
      try {
        TimeLineBitmapDownloader.pauseReadWorkLock.wait();
      }
 catch (      InterruptedException e) {
      }
    }
  }
  if (isCancelled())   return null;
  String path=FileManager.getFilePathFromUrl(data,method);
  boolean downloaded=TaskCache.waitForPictureDownload(data,(SettingUtility.getEnableBigPic() ? downloadListener : null),path,method);
  if (!downloaded) {
    failedResult=FailedResult.downloadFailed;
    return null;
  }
  int height=0;
  int width=0;
switch (method) {
case avatar_large:
    width=globalContext.getResources().getDimensionPixelSize(R.dimen.timeline_avatar_width);
  height=globalContext.getResources().getDimensionPixelSize(R.dimen.timeline_avatar_height);
break;
case avatar_small:
width=globalContext.getResources().getDimensionPixelSize(R.dimen.timeline_avatar_width);
height=globalContext.getResources().getDimensionPixelSize(R.dimen.timeline_avatar_height);
break;
case picture_thumbnail:
width=globalContext.getResources().getDimensionPixelSize(R.dimen.timeline_pic_thumbnail_width);
height=globalContext.getResources().getDimensionPixelSize(R.dimen.timeline_pic_thumbnail_height);
break;
case picture_large:
DisplayMetrics metrics=globalContext.getDisplayMetrics();
float reSize=globalContext.getResources().getDisplayMetrics().density;
height=globalContext.getResources().getDimensionPixelSize(R.dimen.timeline_pic_high_thumbnail_height);
width=(int)(metrics.widthPixels - (14 + 14) * reSize);
}
synchronized (TimeLineBitmapDownloader.pauseReadWorkLock) {
while (TimeLineBitmapDownloader.pauseReadWork && !isCancelled()) {
try {
TimeLineBitmapDownloader.pauseReadWorkLock.wait();
}
 catch (InterruptedException e) {
}
}
}
Bitmap bitmap=ImageTool.getRoundedCornerPic(path,width,height);
if (bitmap == null) {
this.failedResult=FailedResult.readFailed;
}
return bitmap;
}
